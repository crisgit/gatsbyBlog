{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Post.js","webpack:///./node_modules/reactstrap/es/Pagination.js","webpack:///./node_modules/reactstrap/es/PaginationItem.js","webpack:///./node_modules/reactstrap/es/PaginationLink.js","webpack:///./src/components/PaginationLinks.js"],"names":["indexQuery","IndexPage","numberOfPages","pageTitle","title","keywords","className","src","alt","style","width","query","render","data","Math","ceil","allMarkdownRemark","totalCount","edges","map","node","key","id","frontmatter","slug","fields","author","body","excerpt","date","fluid","image","childImageSharp","tags","currentPage","Post","to","tag","slugify","color","propTypes","children","string","listClassName","cssModule","object","size","listTag","props","_classNames","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","active","bool","disabled","next","previous","first","last","defaultAriaLabel","defaultCaret","ariaLabel","Array","isArray","length","href","PaginationLinks","isFirst","isLast","previousPage","toString","nextPage","aria-label","from","_","i"],"mappings":"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","file":"component---src-pages-index-js-a82db0dbf5b153e1ee45.js","sourcesContent":["import React from 'react'\n\nimport { Card, CardBody, CardTitle } from 'reactstrap'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Post from '../components/Post'\nimport PaginationLinks from '../components/PaginationLinks'\n\nconst IndexPage = () => {\n  const postsPerPage = 2\n  let numberOfPages\n  return (\n    <Layout pageTitle=\"Digital Blog\">\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n      {/*<h1>Posts</h1>*/}\n\n      <Card>\n      <CardBody>\n        <CardTitle className=\"text-center text-uppercase\">\n          PUBLICIDADE\n        </CardTitle>\n        <img\n          src=\"https://via.placeholder.com/320x50\"\n          alt=\"Advert\"\n          style={{ width: \"100%\" }}\n        />\n      </CardBody>\n    </Card>\n\n      <StaticQuery\n        query={indexQuery}\n        render={data => {\n          numberOfPages = Math.ceil(\n            data.allMarkdownRemark.totalCount / postsPerPage\n          )\n          return (\n            <div>\n              {data.allMarkdownRemark.edges.map(({ node }) => (\n                <Post\n                  key={node.id}\n                  title={node.frontmatter.title}\n                  slug={node.fields.slug}\n                  author={node.frontmatter.author}\n                  body={node.excerpt}\n                  date={node.frontmatter.date}\n                  fluid={node.frontmatter.image.childImageSharp.fluid}\n                  tags={node.frontmatter.tags}\n                />\n              ))}\n              <PaginationLinks currentPage={1} numberOfPages={numberOfPages} />\n            </div>\n          )\n        }}\n      />\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\nquery indexQuery {\n  allMarkdownRemark (\n    sort: { fields: [frontmatter___date], order: DESC}\n    limit: 2\n    ) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date (formatString: \"MMM Do YYYY\")\n          author\n          tags\n          image{\n            childImageSharp{\n              fluid(maxWidth:600){\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        fields{\n          slug\n        }\n        excerpt\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n","import React from 'react'\nimport { Badge, Card, CardTitle, CardText, CardSubtitle, CardBody } from 'reactstrap'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { slugify } from '../util/utilityFunctions'\n\n\nconst Post = ({ title, author, slug, date, body, fluid, tags }) => (\n    <Card>\n        <Link to={slug}>\n            <Img className=\"card-image-top\" fluid={fluid} />\n        </Link>\n        <CardBody>\n            <CardTitle>\n                <Link to={slug}> {title} </Link>\n            </CardTitle>\n            <CardSubtitle>\n                <span className=\"text-info\"> {date} </span> by {' '}\n                <span className=\"text-info\"> {author} </span>\n            </CardSubtitle>\n            <CardText>{body}</CardText>\n            <ul className=\"post-tags\">\n                {tags.map(tag => (\n                    <li key={tag}>\n                        <Link to={`/tag/${slugify(tag)}`}>\n                            <Badge color=\"primary\" className=\"text-uppercase\">\n                                {tag}\n                            </Badge>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <Link to={slug} className=\"btn btn-outline-primary float-right text-uppercase\" > Veja Mais... </Link>\n        </CardBody>\n    </Card>\n)\n\n\nexport default Post","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import \"core-js/modules/es6.array.is-array\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import React from 'react'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\n\nconst PaginationLinks = ({ currentPage, numberOfPages }) => {\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numberOfPages\n    const previousPage = currentPage - 1 === 1 ? '/' : '/page/' + (currentPage - 1).toString()\n    const nextPage = '/page/' + (currentPage + 1).toString()\n    return (\n        <Pagination aria-label=\"Page navigation example\">\n            {isFirst ? (\n                <PaginationItem disabled>\n                    <PaginationLink previous href=\"/\" />\n                </PaginationItem>\n            ) : (\n                    <PaginationItem>\n                        <PaginationLink previous href={previousPage} />\n                    </PaginationItem>\n                )}\n            {Array.from({ length: numberOfPages }, (_, i) => currentPage === i + 1 ? (\n                <PaginationItem active key={`page-number${i + 1}`}>\n                    <PaginationLink href={`/${i === 0 ? '' : 'page/' + (i + 1)}`}>\n                        {i + 1}\n                    </PaginationLink>\n                </PaginationItem>\n            ) : (\n                    <PaginationItem key={`page-number${i + 1}`}>\n                        <PaginationLink href={`/${i === 0 ? '' : 'page/' + (i + 1)}`}>\n                            {i + 1}\n                        </PaginationLink>\n                    </PaginationItem>\n                ))}\n            {isLast ? (\n                <PaginationItem disabled>\n                    <PaginationLink next href={nextPage} />\n                </PaginationItem>\n            ) : (\n                    <PaginationItem>\n                        <PaginationLink next href={nextPage} />\n                    </PaginationItem>\n                )}\n        </Pagination>\n    )\n}\n\nexport default PaginationLinks"],"sourceRoot":""}