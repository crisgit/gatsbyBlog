{"version":3,"sources":["webpack:///./src/templates/tag-posts.js","webpack:///./src/components/Post.js"],"names":["tagQuery","tagPosts","data","tag","pageContext","totalCount","allMarkdownRemark","pageHeader","pageTitle","className","src","alt","style","width","edges","map","node","key","id","slug","fields","title","frontmatter","author","date","body","excerpt","tags","fluid","image","childImageSharp","Post","to","slugify","color"],"mappings":"0FAAA,iHA6CaA,EAAQ,aAiCNC,UAxEE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACRC,EADgC,EAAlBC,YACdD,IACAE,EAAeH,EAAKI,kBAApBD,WACFE,EAAgBF,EAAN,SACG,IAAfA,EAAmB,GAAK,KADZ,eAEGF,EAFH,IAIhB,OACI,kBAAC,IAAD,CAAQK,UAAWD,GAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWE,UAAU,8BAArB,eAGA,yBACIC,IAAI,qCACJC,IAAI,SACJC,MAAO,CAAEC,MAAO,YAK3BX,EAAKI,kBAAkBQ,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC9B,kBAAC,IAAD,CACIC,IAAKD,EAAKE,GACVC,KAAMH,EAAKI,OAAOD,KAClBE,MAAOL,EAAKM,YAAYD,MACxBE,OAAQP,EAAKM,YAAYC,OACzBC,KAAMR,EAAKM,YAAYE,KACvBC,KAAMT,EAAKU,QACXC,KAAMX,EAAKM,YAAYK,KACvBC,MAAOZ,EAAKM,YAAYO,MAAMC,gBAAgBF,c,iCCtClE,4GAsCeG,IA/BF,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOE,EAAV,EAAUA,OAAQJ,EAAlB,EAAkBA,KAAMK,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,KAAMG,EAApC,EAAoCA,MAAOD,EAA3C,EAA2CA,KAA3C,OACT,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMK,GAAIb,GACN,kBAAC,IAAD,CAAKV,UAAU,iBAAiBmB,MAAOA,KAE3C,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMI,GAAIb,GAAV,IAAkBE,EAAlB,MAEJ,kBAAC,IAAD,KACI,0BAAMZ,UAAU,aAAhB,IAA8Be,EAA9B,KADJ,OACoD,IAChD,0BAAMf,UAAU,aAAhB,IAA8Bc,EAA9B,MAEJ,kBAAC,IAAD,KAAWE,GACX,wBAAIhB,UAAU,aACTkB,EAAKZ,KAAI,SAAAZ,GAAG,OACT,wBAAIc,IAAKd,GACL,kBAAC,OAAD,CAAM6B,GAAE,QAAUC,kBAAQ9B,IACtB,kBAAC,IAAD,CAAO+B,MAAM,UAAUzB,UAAU,kBAC5BN,SAMrB,kBAAC,OAAD,CAAM6B,GAAIb,EAAMV,UAAU,sDAA1B","file":"component---src-templates-tag-posts-js-7249c3c81b4c6e4a67d8.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport { Card, CardBody, CardTitle } from 'reactstrap'\nimport Post from '../components/Post'\n\nconst tagPosts = ({ data, pageContext }) => {\n    const { tag } = pageContext\n    const { totalCount } = data.allMarkdownRemark\n    const pageHeader = `${totalCount} post${\n        totalCount === 1 ? '' : 's'\n        } tagged in \"${tag}\"`\n\n    return (\n        <Layout pageTitle={pageHeader}>\n\n            <Card>\n                <CardBody>\n                    <CardTitle className=\"text-center text-uppercase\">\n                        PUBLICIDADE\n                     </CardTitle>\n                    <img\n                        src=\"https://via.placeholder.com/320x50\"\n                        alt=\"Advert\"\n                        style={{ width: \"100%\" }}\n                    />\n                </CardBody>\n            </Card>\n\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n                <Post\n                    key={node.id}\n                    slug={node.fields.slug}\n                    title={node.frontmatter.title}\n                    author={node.frontmatter.author}\n                    date={node.frontmatter.date}\n                    body={node.excerpt}\n                    tags={node.frontmatter.tags}\n                    fluid={node.frontmatter.image.childImageSharp.fluid}\n                />\n            ))}\n        </Layout>\n    )\n}\n\nexport const tagQuery = graphql`\n    query($tag: String!) {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { tags: { in: [$tag] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"MMMM Do YYYY\")\n                        author\n                        tags\n                        image {\n                            childImageSharp {\n                                fluid( maxWidth: 650, maxHeight: 371) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                    }\n                    excerpt\n                }\n            }\n        }\n    }\n`\n\nexport default tagPosts","import React from 'react'\nimport { Badge, Card, CardTitle, CardText, CardSubtitle, CardBody } from 'reactstrap'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { slugify } from '../util/utilityFunctions'\n\n\nconst Post = ({ title, author, slug, date, body, fluid, tags }) => (\n    <Card>\n        <Link to={slug}>\n            <Img className=\"card-image-top\" fluid={fluid} />\n        </Link>\n        <CardBody>\n            <CardTitle>\n                <Link to={slug}> {title} </Link>\n            </CardTitle>\n            <CardSubtitle>\n                <span className=\"text-info\"> {date} </span> by {' '}\n                <span className=\"text-info\"> {author} </span>\n            </CardSubtitle>\n            <CardText>{body}</CardText>\n            <ul className=\"post-tags\">\n                {tags.map(tag => (\n                    <li key={tag}>\n                        <Link to={`/tag/${slugify(tag)}`}>\n                            <Badge color=\"primary\" className=\"text-uppercase\">\n                                {tag}\n                            </Badge>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <Link to={slug} className=\"btn btn-outline-primary float-right text-uppercase\" > Veja Mais... </Link>\n        </CardBody>\n    </Card>\n)\n\n\nexport default Post"],"sourceRoot":""}