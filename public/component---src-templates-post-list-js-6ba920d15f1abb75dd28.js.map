{"version":3,"sources":["webpack:///./src/templates/post-list.js","webpack:///./src/components/Post.js","webpack:///./node_modules/reactstrap/es/Pagination.js","webpack:///./node_modules/reactstrap/es/PaginationItem.js","webpack:///./node_modules/reactstrap/es/PaginationLink.js","webpack:///./src/components/PaginationLinks.js"],"names":["postListQuery","postList","props","posts","data","allMarkdownRemark","edges","pageContext","currentPage","numberOfPages","pageTitle","className","src","alt","style","width","map","node","key","id","slug","fields","title","frontmatter","author","date","body","excerpt","tags","fluid","image","childImageSharp","Post","to","tag","slugify","color","propTypes","children","string","listClassName","cssModule","object","size","listTag","_classNames","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","active","bool","disabled","next","previous","first","last","defaultAriaLabel","defaultCaret","ariaLabel","Array","isArray","length","href","PaginationLinks","isFirst","isLast","previousPage","toString","nextPage","aria-label","from","_","i"],"mappings":"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","file":"component---src-templates-post-list-js-6ba920d15f1abb75dd28.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport Post from '../components/Post'\nimport { graphql } from 'gatsby'\nimport PaginationLinks from '../components/PaginationLinks'\n\n\nconst postList = (props) => {\n    const posts = props.data.allMarkdownRemark.edges\n    const { currentPage, numberOfPages } = props.pageContext\n\n    return (\n        <Layout pageTitle={`PÃ¡gina: ${currentPage}`}>\n\n            <Card>\n                <CardBody>\n                    <CardTitle className=\"text-center text-uppercase\">\n                        PUBLICIDADE\n                     </CardTitle>\n                    <img\n                        src=\"https://via.placeholder.com/320x50\"\n                        alt=\"Advert\"\n                        style={{ width: \"100%\" }}\n                    />\n                </CardBody>\n            </Card>\n            \n            {posts.map(({ node }) => (\n                <Post\n                    key={node.id}\n                    slug={node.fields.slug}\n                    title={node.frontmatter.title}\n                    author={node.frontmatter.author}\n                    date={node.frontmatter.date}\n                    body={node.excerpt}\n                    tags={node.frontmatter.tags}\n                    fluid={node.frontmatter.image.childImageSharp.fluid}\n                />\n            ))}\n            <PaginationLinks\n                currentPage={currentPage}\n                numberOfPages={numberOfPages}\n            />\n\n            \n\n        </Layout>\n    )\n}\n\nexport const postListQuery = graphql`\n    query postListQuery($skip: Int!, $limit: Int!) {\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"MMMM Do YYYY\")\n                        author\n                        tags\n                        image {\n                            childImageSharp {\n                                fluid( maxWidth: 650, maxHeight: 371) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                    fields {\n                        slug\n                    }\n                    excerpt\n                }\n            }\n        }\n    }\n`\n\nexport default postList","import React from 'react'\nimport { Badge, Card, CardTitle, CardText, CardSubtitle, CardBody } from 'reactstrap'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { slugify } from '../util/utilityFunctions'\n\n\nconst Post = ({ title, author, slug, date, body, fluid, tags }) => (\n    <Card>\n        <Link to={slug}>\n            <Img className=\"card-image-top\" fluid={fluid} />\n        </Link>\n        <CardBody>\n            <CardTitle>\n                <Link to={slug}> {title} </Link>\n            </CardTitle>\n            <CardSubtitle>\n                <span className=\"text-info\"> {date} </span> by {' '}\n                <span className=\"text-info\"> {author} </span>\n            </CardSubtitle>\n            <CardText>{body}</CardText>\n            <ul className=\"post-tags\">\n                {tags.map(tag => (\n                    <li key={tag}>\n                        <Link to={`/tag/${slugify(tag)}`}>\n                            <Badge color=\"primary\" className=\"text-uppercase\">\n                                {tag}\n                            </Badge>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <Link to={slug} className=\"btn btn-outline-primary float-right text-uppercase\" > Veja Mais... </Link>\n        </CardBody>\n    </Card>\n)\n\n\nexport default Post","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import \"core-js/modules/es6.array.is-array\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'a'\n};\n\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      next = props.next,\n      previous = props.previous,\n      first = props.first,\n      last = props.last,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n\n  var children = props.children;\n\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import React from 'react'\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\n\nconst PaginationLinks = ({ currentPage, numberOfPages }) => {\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numberOfPages\n    const previousPage = currentPage - 1 === 1 ? '/' : '/page/' + (currentPage - 1).toString()\n    const nextPage = '/page/' + (currentPage + 1).toString()\n    return (\n        <Pagination aria-label=\"Page navigation example\">\n            {isFirst ? (\n                <PaginationItem disabled>\n                    <PaginationLink previous href=\"/\" />\n                </PaginationItem>\n            ) : (\n                    <PaginationItem>\n                        <PaginationLink previous href={previousPage} />\n                    </PaginationItem>\n                )}\n            {Array.from({ length: numberOfPages }, (_, i) => currentPage === i + 1 ? (\n                <PaginationItem active key={`page-number${i + 1}`}>\n                    <PaginationLink href={`/${i === 0 ? '' : 'page/' + (i + 1)}`}>\n                        {i + 1}\n                    </PaginationLink>\n                </PaginationItem>\n            ) : (\n                    <PaginationItem key={`page-number${i + 1}`}>\n                        <PaginationLink href={`/${i === 0 ? '' : 'page/' + (i + 1)}`}>\n                            {i + 1}\n                        </PaginationLink>\n                    </PaginationItem>\n                ))}\n            {isLast ? (\n                <PaginationItem disabled>\n                    <PaginationLink next href={nextPage} />\n                </PaginationItem>\n            ) : (\n                    <PaginationItem>\n                        <PaginationLink next href={nextPage} />\n                    </PaginationItem>\n                )}\n        </Pagination>\n    )\n}\n\nexport default PaginationLinks"],"sourceRoot":""}